"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[864],{3973:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"examples","title":"Examples","description":"Semver API","source":"@site/docs/examples.md","sourceDirName":".","slug":"/examples","permalink":"/luau-cargo-semver/docs/examples","draft":false,"unlisted":false,"editUrl":"https://github.com/Tim7775/luau-cargo-semver/edit/main/docs/examples.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"defaultSidebar","previous":{"title":"Specification","permalink":"/luau-cargo-semver/docs/specification"},"next":{"title":"Memoization","permalink":"/luau-cargo-semver/docs/memoization"}}');var t=n(4848),a=n(8453);const i={sidebar_position:4},o="Examples",l={},c=[{value:"Semver API",id:"semver-api",level:3},{value:"CargoSemver API",id:"cargosemver-api",level:3}];function d(e){const r={code:"code",h1:"h1",h3:"h3",header:"header",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"examples",children:"Examples"})}),"\n",(0,t.jsx)(r.h3,{id:"semver-api",children:"Semver API"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lua",children:'local Semver = require("luau-cargo-semver/lib/Semver")\n\ndo\n\tlocal req = ">=1.2.3, <1.8.0"\n\n\t-- Check whether this requirement matches version 1.2.3-alpha.1 (no)\n\tassert(not Semver.matches("1.2.3-alpha.1", req), "assertion failed!")\n\n\t-- Check whether it matches 1.3.0 (yes it does)\n\tassert(Semver.matches("1.3.0", req), "assertion failed!")\n\n\t-- Compare versions\n\tassert(Semver.cmp("1.3.0", "~=", "1.3.0+build"), "assertion failed!")\n\tassert(Semver.cmpPrecedence("1.3.0", "==", "1.3.0+build"), "assertion failed!")\n\n\t-- Sort versions array\n\tlocal versions = { "3.1.2", "1.0.0", "1.0.0-rc.1", "1.0.0-rc.2", "0.3.0-alpha", "0.3.0-beta" }\n\ttable.sort(versions, function(a, b)\n\t\treturn Semver.cmp(a, "<", b)\n\tend)\n\tprint(versions)\nend\n'})}),"\n",(0,t.jsx)(r.h3,{id:"cargosemver-api",children:"CargoSemver API"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-lua",children:'local CargoSemver = require("luau-cargo-semver/lib/CargoSemver/src")\nlocal BuildMetadata, Prerelease, Version, VersionReq, Ordering =\n\tCargoSemver.BuildMetadata, CargoSemver.Prerelease, CargoSemver.Version, CargoSemver.VersionReq, CargoSemver.Ordering\n\ndo\n\tlocal req = VersionReq.parse(">=1.2.3, <1.8.0")\n\n\t-- Check whether this requirement matches version 1.2.3-alpha.1 (no)\n\tlocal ver = Version.new(1, 2, 3, Prerelease.new("alpha.1"), BuildMetadata.EMPTY)\n\tassert(not req:matches(ver), "assertion failed!")\n\n\t-- Check whether it matches 1.3.0 (yes it does)\n\tver = Version.parse("1.3.0")\n\tassert(req:matches(ver), "assertion failed!")\n\n\t-- Compare versions\n\tlocal verBuild = Version.parse("1.3.0+build")\n\tassert(ver ~= verBuild, "assertion failed!")\n\tassert(ver:cmp_precedence(verBuild) == Ordering.Equal, "assertion failed!")\n\n\t-- Sort versions array\n\tlocal versions = {\n\t\tVersion.parse("3.1.2"),\n\t\tVersion.parse("1.0.0"),\n\t\tVersion.parse("1.0.0-rc.1"),\n\t\tVersion.parse("1.0.0-rc.2"),\n\t\tVersion.parse("0.3.0-alpha"),\n\t\tVersion.parse("0.3.0-beta"),\n\t}\n\ttable.sort(versions)\n\tprint(versions)\nend\n'})})]})}function m(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>o});var s=n(6540);const t={},a=s.createContext(t);function i(e){const r=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);